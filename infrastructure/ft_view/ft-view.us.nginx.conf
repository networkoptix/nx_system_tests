server {
    listen 80;
    server_name us.nxft.dev;
    return 307 https://$host$request_uri;
}
map $request_method $method_category {
    GET read;
    HEAD read;
    OPTIONS read;
    default write;
}
map "$method_category $origin_category" $csrf {
    "write cross" 1;
    default 0;
}
server {
    listen 443 ssl;
    server_name us.nxft.dev;
    ssl_certificate /home/ft/.config/fullchain.pem;
    ssl_certificate_key /home/ft/.config/privkey.pem;
    set $origin_category "cross";
    if ($http_origin = "$scheme://$host") {
        set $origin_category "same";
    }
    location /api/reporting/stage {
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:8091/api/reporting/stage;
        add_header Access-Control-Allow-Origin http://127.0.0.1:5002 always;
        add_header Access-Control-Allow-Methods POST always;
        add_header Access-Control-Allow-Headers Content-Type always;
        add_header Vary Origin always;
    }
    location /batches/start {
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:8094;
    }
    location /batches/get {
        if ($http_user_agent ~* "(Chrome|Chromium|Firefox|Safari|Edge|Opera|Yandex)") {
            return 307 /?$query_string;
        }
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:8094;
    }
    location /static {
        alias /home/ft/web_ui/ft/infrastructure/ft_view/web_ui/static;
        try_files $uri =404;
    }
    location ~ ^/pg/(.*) {
        return 307 https://pg.nxft.dev/$1$is_args$args;
    }
    include /etc/nginx/snippets/oidc-validate.conf;
    location / {
        if ($csrf) {
            return 403;
        }
        include /etc/nginx/snippets/oidc-auth-request.conf;
        proxy_set_header Host $host;
        proxy_set_header User $user;
        proxy_pass http://127.0.0.1:8092;
    }
}
